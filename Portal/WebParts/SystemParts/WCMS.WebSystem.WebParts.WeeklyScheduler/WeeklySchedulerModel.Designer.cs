//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace WCMS.WebSystem.WebParts.WeeklyScheduler
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WeeklySchedulerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WeeklySchedulerEntities object using the connection string found in the 'WeeklySchedulerEntities' section of the application configuration file.
        /// </summary>
        public WeeklySchedulerEntities() : base("name=WeeklySchedulerEntities", "WeeklySchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WeeklySchedulerEntities object.
        /// </summary>
        public WeeklySchedulerEntities(string connectionString) : base(connectionString, "WeeklySchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WeeklySchedulerEntities object.
        /// </summary>
        public WeeklySchedulerEntities(EntityConnection connection) : base(connection, "WeeklySchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WeeklySchedulerItem> WeeklySchedulerItems
        {
            get
            {
                if ((_WeeklySchedulerItems == null))
                {
                    _WeeklySchedulerItems = base.CreateObjectSet<WeeklySchedulerItem>("WeeklySchedulerItems");
                }
                return _WeeklySchedulerItems;
            }
        }
        private ObjectSet<WeeklySchedulerItem> _WeeklySchedulerItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WeeklySchedulerTask> WeeklySchedulerTasks
        {
            get
            {
                if ((_WeeklySchedulerTasks == null))
                {
                    _WeeklySchedulerTasks = base.CreateObjectSet<WeeklySchedulerTask>("WeeklySchedulerTasks");
                }
                return _WeeklySchedulerTasks;
            }
        }
        private ObjectSet<WeeklySchedulerTask> _WeeklySchedulerTasks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WeeklySchedulerItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWeeklySchedulerItems(WeeklySchedulerItem weeklySchedulerItem)
        {
            base.AddObject("WeeklySchedulerItems", weeklySchedulerItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WeeklySchedulerTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWeeklySchedulerTasks(WeeklySchedulerTask weeklySchedulerTask)
        {
            base.AddObject("WeeklySchedulerTasks", weeklySchedulerTask);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="WeeklySchedulerItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WeeklySchedulerItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WeeklySchedulerItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static WeeklySchedulerItem CreateWeeklySchedulerItem(global::System.Int32 id, global::System.Int32 taskId, global::System.DateTime startDateTime, global::System.Int32 userId)
        {
            WeeklySchedulerItem weeklySchedulerItem = new WeeklySchedulerItem();
            weeklySchedulerItem.Id = id;
            weeklySchedulerItem.TaskId = taskId;
            weeklySchedulerItem.StartDateTime = startDateTime;
            weeklySchedulerItem.UserId = userId;
            return weeklySchedulerItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value, "TaskId");
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value, "StartDateTime");
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="WeeklySchedulerTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WeeklySchedulerTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WeeklySchedulerTask object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static WeeklySchedulerTask CreateWeeklySchedulerTask(global::System.Int32 id, global::System.String name)
        {
            WeeklySchedulerTask weeklySchedulerTask = new WeeklySchedulerTask();
            weeklySchedulerTask.Id = id;
            weeklySchedulerTask.Name = name;
            return weeklySchedulerTask;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }

    #endregion

}
