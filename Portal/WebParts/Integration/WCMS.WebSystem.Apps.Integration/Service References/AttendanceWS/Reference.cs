//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCMS.WebSystem.Apps.Integration.AttendanceWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AttendanceWS.AttendanceSoap")]
    public interface AttendanceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] Insert2(string externalIdNo, int localeID, int serviceScheduleID, int serviceID, string weekNo, string dateTimeIn, string serviceLateTime, string status, string isLowerVersionIE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        bool Insert3(long memberID, int localeID, int serviceScheduleID, int serviceID, string weekNo, string dateTimeIn, string serviceLateTime, string status, bool overWriteAttendance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTimeIn2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] UpdateTimeIn2(long attendanceID, int localeID, int serviceScheduleID, int serviceID, string weekNo, string dateTimeIn, string serviceLateTime, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTimeOut2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] UpdateTimeOut2(string externalIdNo, int serviceScheduleID, int serviceID, string weekNo, string dateTimeOut, string isLowerVersionIE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveMemberInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] RetrieveMemberInfo(string externalIdNo, string status, string isLowerVersionIE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveAtt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] RetrieveAtt(int memberID, string serviceDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertMP3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        bool InsertMP3(long memberID, int localeID, long[] serviceScheduleIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteMP3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        bool DeleteMP3(long memberID, long serviceScheduleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        bool Insert(string externalIdNo, int serviceScheduleID, string dateTimeIn, string status, int createdByUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTimeIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        bool UpdateTimeIn(long attendanceID, string dateTimeIn, string status, int updatedByUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTimeOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        bool UpdateTimeOut(string externalIdNo, int serviceScheduleID, string dateTimeOut, int updatedByUserID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AttendanceSoapChannel : WCMS.WebSystem.Apps.Integration.AttendanceWS.AttendanceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AttendanceSoapClient : System.ServiceModel.ClientBase<WCMS.WebSystem.Apps.Integration.AttendanceWS.AttendanceSoap>, WCMS.WebSystem.Apps.Integration.AttendanceWS.AttendanceSoap {
        
        public AttendanceSoapClient() {
        }
        
        public AttendanceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AttendanceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AttendanceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AttendanceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object[] Insert2(string externalIdNo, int localeID, int serviceScheduleID, int serviceID, string weekNo, string dateTimeIn, string serviceLateTime, string status, string isLowerVersionIE) {
            return base.Channel.Insert2(externalIdNo, localeID, serviceScheduleID, serviceID, weekNo, dateTimeIn, serviceLateTime, status, isLowerVersionIE);
        }
        
        public bool Insert3(long memberID, int localeID, int serviceScheduleID, int serviceID, string weekNo, string dateTimeIn, string serviceLateTime, string status, bool overWriteAttendance) {
            return base.Channel.Insert3(memberID, localeID, serviceScheduleID, serviceID, weekNo, dateTimeIn, serviceLateTime, status, overWriteAttendance);
        }
        
        public object[] UpdateTimeIn2(long attendanceID, int localeID, int serviceScheduleID, int serviceID, string weekNo, string dateTimeIn, string serviceLateTime, string status) {
            return base.Channel.UpdateTimeIn2(attendanceID, localeID, serviceScheduleID, serviceID, weekNo, dateTimeIn, serviceLateTime, status);
        }
        
        public object[] UpdateTimeOut2(string externalIdNo, int serviceScheduleID, int serviceID, string weekNo, string dateTimeOut, string isLowerVersionIE) {
            return base.Channel.UpdateTimeOut2(externalIdNo, serviceScheduleID, serviceID, weekNo, dateTimeOut, isLowerVersionIE);
        }
        
        public object[] RetrieveMemberInfo(string externalIdNo, string status, string isLowerVersionIE) {
            return base.Channel.RetrieveMemberInfo(externalIdNo, status, isLowerVersionIE);
        }
        
        public object[] RetrieveAtt(int memberID, string serviceDateTime) {
            return base.Channel.RetrieveAtt(memberID, serviceDateTime);
        }
        
        public bool InsertMP3(long memberID, int localeID, long[] serviceScheduleIDs) {
            return base.Channel.InsertMP3(memberID, localeID, serviceScheduleIDs);
        }
        
        public bool DeleteMP3(long memberID, long serviceScheduleID) {
            return base.Channel.DeleteMP3(memberID, serviceScheduleID);
        }
        
        public bool Insert(string externalIdNo, int serviceScheduleID, string dateTimeIn, string status, int createdByUserID) {
            return base.Channel.Insert(externalIdNo, serviceScheduleID, dateTimeIn, status, createdByUserID);
        }
        
        public bool UpdateTimeIn(long attendanceID, string dateTimeIn, string status, int updatedByUserID) {
            return base.Channel.UpdateTimeIn(attendanceID, dateTimeIn, status, updatedByUserID);
        }
        
        public bool UpdateTimeOut(string externalIdNo, int serviceScheduleID, string dateTimeOut, int updatedByUserID) {
            return base.Channel.UpdateTimeOut(externalIdNo, serviceScheduleID, dateTimeOut, updatedByUserID);
        }
    }
}
