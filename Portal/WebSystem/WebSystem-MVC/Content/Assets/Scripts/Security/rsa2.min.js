function pkcs1unpad2(n,t){for(var r=n.toByteArray(),i=0,f,u;i<r.length&&r[i]==0;)++i;if(r.length-i!=t-1||r[i]!=2)return null;for(++i;r[i]!=0;)if(++i>=r.length)return null;for(f="";++i<r.length;)u=r[i]&255,u<128?f+=String.fromCharCode(u):u>191&&u<224?(f+=String.fromCharCode((u&31)<<6|r[i+1]&63),++i):(f+=String.fromCharCode((u&15)<<12|(r[i+1]&63)<<6|r[i+2]&63),i+=2);return f}function RSASetPrivate(n,t,i){n!=null&&t!=null&&n.length>0&&t.length>0?(this.n=parseBigInt(n,16),this.e=parseInt(t,16),this.d=parseBigInt(i,16)):alert("Invalid RSA private key")}function RSASetPrivateEx(n,t,i,r,u,f,e,o){n!=null&&t!=null&&n.length>0&&t.length>0?(this.n=parseBigInt(n,16),this.e=parseInt(t,16),this.d=parseBigInt(i,16),this.p=parseBigInt(r,16),this.q=parseBigInt(u,16),this.dmp1=parseBigInt(f,16),this.dmq1=parseBigInt(e,16),this.coeff=parseBigInt(o,16)):alert("Invalid RSA private key")}function RSAGenerate(n,t){var r=new SecureRandom,u=n>>1,i,f;for(this.e=parseInt(t,16),i=new BigInteger(t,16);;){for(;;)if(this.p=new BigInteger(n-u,1,r),this.p.subtract(BigInteger.ONE).gcd(i).compareTo(BigInteger.ONE)==0&&this.p.isProbablePrime(10))break;for(;;)if(this.q=new BigInteger(u,1,r),this.q.subtract(BigInteger.ONE).gcd(i).compareTo(BigInteger.ONE)==0&&this.q.isProbablePrime(10))break;this.p.compareTo(this.q)<=0&&(f=this.p,this.p=this.q,this.q=f);var e=this.p.subtract(BigInteger.ONE),o=this.q.subtract(BigInteger.ONE),s=e.multiply(o);if(s.gcd(i).compareTo(BigInteger.ONE)==0){this.n=this.p.multiply(this.q);this.d=i.modInverse(s);this.dmp1=this.d.mod(e);this.dmq1=this.d.mod(o);this.coeff=this.q.modInverse(this.p);break}}}function RSADoPrivate(n){if(this.p==null||this.q==null)return n.modPow(this.d,this.n);for(var t=n.mod(this.p).modPow(this.dmp1,this.p),i=n.mod(this.q).modPow(this.dmq1,this.q);t.compareTo(i)<0;)t=t.add(this.p);return t.subtract(i).multiply(this.coeff).mod(this.p).multiply(this.q).add(i)}function RSADecrypt(n){var i=parseBigInt(n,16),t=this.doPrivate(i);return t==null?null:pkcs1unpad2(t,this.n.bitLength()+7>>3)}RSAKey.prototype.doPrivate=RSADoPrivate;RSAKey.prototype.setPrivate=RSASetPrivate;RSAKey.prototype.setPrivateEx=RSASetPrivateEx;RSAKey.prototype.generate=RSAGenerate;RSAKey.prototype.decrypt=RSADecrypt;
//# sourceMappingURL=rsa2.min.js.map
